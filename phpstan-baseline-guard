#!/usr/bin/env php
<?php

declare(strict_types=1);

use Leovie\PhpstanBaselineGuard\Command\PhpstanBaselineGuardCommand;
use Leovie\PhpstanBaselineGuard\Neon\NeonDecoder;
use Leovie\PhpstanBaselineGuard\Parser\BaselineParser;
use Leovie\PhpstanBaselineGuard\Service\BaselineGuardService;
use Symfony\Component\Console\Application;

if (\in_array(\PHP_SAPI, ['cli', 'phpdbg', 'embed'], true) === false) {
    echo \PHP_EOL . 'phpstan-baseline-guard may only be invoked from a command line, got "' . \PHP_SAPI . '"' . \PHP_EOL;

    exit(1);
}

(static function (): void {
    if (\file_exists($autoload = __DIR__ . '/../../autoload.php')) {
        // Is installed via Composer
        include_once $autoload;

        return;
    }

    if (\file_exists($autoload = __DIR__ . '/vendor/autoload.php')) {
        // Is installed locally
        include_once $autoload;

        return;
    }

    \fwrite(
        \STDERR,
        <<<'ERROR'
You need to set up the project dependencies using Composer:
    $ composer install
See https://getcomposer.org/.
ERROR
    );

    throw new RuntimeException('Unable to find the Composer autoloader.');
})();

// Project (third-party) autoloading
(static function (): void {
    if (\file_exists($autoload = getcwd() . '/vendor/autoload.php')) {
        include_once $autoload;
    }
})();

$application = new Application('phpstan-baseline-guard', '1.0.0');
$command = new PhpstanBaselineGuardCommand(
    new BaselineGuardService(
        new NeonDecoder(),
        new BaselineParser()
    )
);

$application->add($command);

/** @var string $commandName */
$commandName = $command->getName();
$application->setDefaultCommand($commandName, true);
$application->run();